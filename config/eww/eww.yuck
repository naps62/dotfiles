;; Created   by https://github.com/rxyhn
;; Designed  by https://github.com/rxyhn
;; Maintaned by https://github.com/rxyhn

;; put path to aesthetic bar config files here ;;
(defvar eww "eww")

;;
;; Widget Sections
;;

;; Launcher
(defwidget launcher []
  (box :orientation "v" 
       :space-evenly "false" 
       :spacing -15
    (button :class "launcher_icon" 
            :onclick "scripts/popup launcher"  "")))

;; Workspaces
(defwidget workspaces []
  (literal :content workspace))
(deflisten workspace "scripts/workspace")

;; Battery
; (defwidget bat []
; 	(box	:orientation "v"	
; 			:space-evenly "false"
; 	(label	:class "bat"		
; 			:halign "end"		
; 			:text battery	
; 			:tooltip "Battery: ${battery-cappacity}%")))
; (defpoll battery			:interval "1s"	"scripts/battery icon")
; (defpoll battery-cappacity	:interval "1s"	"scripts/battery percent")

;; Wifi
(defwidget wifi []
  (box		:orientation "v"  
          :tooltip wifi-name
    (button		:onclick "scripts/popup wifi" 
              :class "wifi-icon" wifi-icon)))
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")

;; Brightness
; (defwidget bright []
;   (eventbox :onhover "${eww} update bright=true"   
;   			:onhoverlost "${eww} update bright=false"
;   			(box    :orientation "v"  
; 				:space-evenly "false"  
; 					:spacing 2
;   			(revealer :transition "slideup" 
; 			:reveal bright   
; 				:duration "550ms"
;   			(scale :class "bribar" 
; 		 :value current-brightness 
; 			 :tooltip "Brightness: ${current-brightness}%" 
; 			 :onchange "brightnessctl set {}%" 
; 			 :orientation "v" 
; 			 :flipped true 
; 			 :max 101 
; 			 :min 0))
;   			(label :class "brightness-icon" 
; 		 :text ""))))
; (defpoll current-brightness :interval "1s" "brightnessctl -m -d amdgpu_bl0 | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
; (defvar bright false)

;; Volume
(defwidget volum []
  (eventbox :onhover "${eww} update volum=true"
            :onhoverlost "${eww} update volum=false"
    (box      :orientation "v"
              :space-evenly "false"
              :spacing "2"
      (revealer :transition "slideup"
                :reveal volum
                :duration "300ms"
        (scale    :class "volbar"
                  :value current-volume
                  :orientation "v"
                  :flipped true
                  :tooltip "Volume: ${current-volume}%"
                  :max 101
                  :min 0
                  :onchange "amixer -D pulse sset Master {}%" ))
      (button   :onclick "scripts/popup audio"   :class "volume-icon" ""))))

(defpoll current-volume :interval "1s" "pactl get-sink-volume $(pactl get-default-sink) | awk '{ print $5 }'")
(defvar volum false)

;; Control Panel
(defwidget control []
  (box :orientation "v" 
       :space-evenly false  
       :class "control"
    ; (bat)
    (wifi)
    ; (bright)
    (volum)))

;; Clock
(defwidget time []
  (box :orientation "v"
       :class "time"
       :valign "end"
    (button :onclick "scripts/popup calendar"
            :class "time-hour" hour)
    (button :onclick "scripts/popup calendar"
            :class "time-min"  min)))
(defpoll hour :interval "1s" "date '+%H'")
(defpoll min :interval "1s" "date '+%M'")

;; Calendar
(defwidget cal []
  (box :class "cal-box"
       :orientation "v"
    (box :class "cal-inner-box"
      (calendar :class "cal"
                :day calendar_day
                :month calendar_month
                :year calendar_year))))
(defpoll calendar_day :interval "10h"
  "date '+%d'")
(defpoll calendar_month :interval "10h"
  "scripts/calendar")
(defpoll calendar_year :interval "10h"
  "date '+%Y'")

;; Powermenu
(defwidget power []
  (eventbox :onhover "${eww} update power=true"
            :onhoverlost "${eww} update power=false"
    (box :orientation "v"
         :space-evenly "false"
         :vexpand "false"
         :class "powermenu"
      (revealer :transition "slideup"
                :reveal power
                :duration "300ms"
        (box :orientation "v"
             :space-evenly "false"
          (button :class "button-reb"
                  :onclick "reboot"	"")
          (button :class "button-quit"
                  :onclick "killall bspwm" "")
          (button :class "button-off"
                  :onclick "shutdown now" "")))
      (button :class "button-lock"
              :onclick "betterlockscreen -l"	""))))
(defvar power false)

;;
;; Layout
;;

;; Top Widgets ;;
(defwidget top []
  (box	:orientation "v" 
        :space-evenly "false" 
        :valign "start" 
    (launcher)
    (workspaces)))

;; Bottom Widgets ;;
(defwidget bottom []
  (box	:orientation "v" 
        :space-evenly false 
    (time)
    (power)))

;; End Widgets ;;
(defwidget end []
  (box :orientation "v" 
       :space-evenly "false" 
       :valign "end" 
       :spacing 5
    (control)
    (bottom)))

;; Bar Widgets ;;
(defwidget bar []
  (box :class "eww_bar" 
       :orientation "v" 
       :vexpand "false" 
       :hexpand "false"
    (top)
    (end)))

;;
;; Window Sections
;;

;; Bar Window
(defwindow bar
  :geometry (geometry :x "0" 
  :y "0" 
  :height "100%" 
  :width "00px"
  :anchor "left center"
              )
  :monitor 0
  :reserve (struts :distance "35px" 
  :side "left")
  :wm-ignore false
  :hexpand "false"
  :vexpand "false"
  :stacking "fg"
  :exclusive true
  (bar))

;; Calendar Window
(defwindow calendar
  :geometry (geometry :x "0px" 
  :y "80%" 
  :width "270px" 
  :height "60px")
  :monitor 0
  (cal))




