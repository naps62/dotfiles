global !p
from snippet_helpers_ruby import *

import os
endglobal

snippet defi "Constructor"
def initialize(${1:*args})
`!p rb_assign_instance_var_list(t[1], snip)`
end
endsnippet

snippet spec "spec file template"
require "rails_helper"

RSpec.describe ${1:`!p rb_class_name(path, snip)`} do
	$0
end
endsnippet

snippet feature "features spec file template"
require "rails_helper"

RSpec.feature "$1" do
	$0
end
endsnippet

snippet cont "RSpec context" b
context "$1" do
	$0
end
endsnippet

snippet desc "RSpec describe" b
describe "$1" do
	$0
end
endsnippet

snippet it "RSpec spec" b
it "$1" do
	$0
end
endsnippet

snippet class "class definition" b
class `!p rb_class_name(path, snip)`
	$0
end
endsnippet

snippet controller "Rails controller definition" b
class `!p rb_class_name(path, snip)` < ${1:::ApplicationController}
	$0
end
endsnippet

snippet mod "module definition"
module `!p rb_class_name(path, snip)`
	$2
end
endsnippet
